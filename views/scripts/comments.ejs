<script>
    const createReplyNode = (self) => {
        const commentId = self.getAttribute("data-comment-id");
        let html = '';

        html += '<div class="row">';
        html += '<div class="col-md-12">';
        html += '<form onsubmit="return postReply(this);">';
        html += `<input type="hidden" name="commentId" value="${commentId}">`;
        html += `<div class="form-group">`;
        html += '<label>Write reply</label>';
        html += '<textarea class="form-control" name="reply" cols="25" rows="10"></textarea>';
        html += '</div>';
        html += `<button type="submit" class="btn btn-primary" data-comment-id=${commentId}>Reply</button>`;
        html += '</form>';
        html += '</div>';
        html += '</div>';

        self.innerHTML = html;
        self.removeAttribute('onclick');
    }

    const postReply = (form) => {
        const commentId = form.commentId.value;
        const reply = form.reply.value;
        const ajax = new XMLHttpRequest();

        ajax.open('POST', '/video/reply', true);
        ajax.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

        ajax.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                const response = JSON.parse(this.responseText);
                const repliesNode = document.querySelector(`.replies[data-comment-id="${response.commentId}"]`);
                let html = repliesNode.innerHTML;

                html += createNewReply({
                    image: response.user.image,
                    name: response.user.name,
                    reply: response.reply,
                });

                repliesNode.innerHTML = html;

                socket.emit("reply::new", {
                    userCommentId: response.userCommentId,
                    commentId: response.commentId,
                    videoWatch: response.videoWatch,
                    notificationId: response.notificationId,
                    user: {
                        name: response.user.name,
                        image: response.user.image,
                        reply: response.reply,
                    },
                });

                form.reply.value = '';
            }
        }

        ajax.send(`commentId=${commentId}&reply=${reply}`);
        return false;
    }

    const createNewReply = ({
        image,
        name,
        reply,
    }) => {
        let html = '';

        html += '<div class="media mt-4">';
        html += '<img class="d-flex mr-3 comment-img" src="'
            + image
            + '" onerror="this.src = \'http://placehold.it/100x100\'">';
        html += '<div class="media-body">';
        html += `<h5 class="mt-0">${name}</h5>`;
        html += reply;
        html += '</div>';
        html += '</div>';

        return html;
    }

    const postComment = (self) => {
        const ajax = new XMLHttpRequest();
        const videoId = document.getElementById('videoId').value;

        ajax.open("POST", '/video/comment', true);
        ajax.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

        ajax.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                const response = JSON.parse(this.responseText);

                let html = createNewComment({ image: response.image, name: response.name, comment: self.comment.value });

                document.getElementById("comments").innerHTML = html + document.getElementById('comments').innerHTML;

                socket.emit("comment::new", {
                    channelId: response.channelId,
                    userId: response.userId,
                    notiId: response.notiId,
                    video_watch: response.video_watch,
                    name: response.name,
                    image: response.image,
                    comment: self.comment.value,
                });

                self.comment.value = '';
            }
        }

        ajax.send(`videoId=${videoId}&comment=${self.comment.value}`);

        return false;
    }

    function createNewComment(user) {
        let html = '';

        html += '<div class="media mb-4">';
        html += '<img class="d-flex mr-3 comment-img" src="'
            + user.image
            + '" onerror="this.src = \'http://placehold.it/100x100\'">';
        html += '<div class="media-body">';
        html += `<h5 class="mt-0">${user.name}</h5>`;
        html += user.comment;
        html += `<div class="replies" data-comment-id="${user._id}">`;
        html += `<div style="float: right; cursor: pointer;" onclick="createReplyNode(this);" data-comment-id="${user._id}">`;
        html += 'Reply </div>';
        html += '</div>';
        html += '</div>';
        html += '</div>';

        return html;
    }
</script>